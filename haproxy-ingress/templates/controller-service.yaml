{{- include "haproxy-ingress.controller.services" (dict "root" . "svc" .Values.controller.service "default" .Values.controller.service "name" (include "haproxy-ingress.fullname" .)) }}

{{- range $i, $svc := .Values.controller.extraServices }}
---
{{- $name := printf "%s-extra-%d" (include "haproxy-ingress.fullname" $) $i }}
{{- include "haproxy-ingress.controller.services" (dict "root" $ "svc" $svc "default" $.Values.controller.service "name" $name) }}
{{- end }}

{{- define "haproxy-ingress.controller.services" }}
{{- /* Note that any new field with non zero default value under controller.service */}}
{{- /* should be implemented with `default` in the template below. */}}
{{- $externalTrafficPolicy := default .default.externalTrafficPolicy .svc.externalTrafficPolicy }}
{{- $svctype := default .default.type .svc.type }}
{{- $httpPorts := default .default.httpPorts .svc.httpPorts }}
{{- $httpsPorts := default .default.httpsPorts .svc.httpsPorts }}
apiVersion: v1
kind: Service
metadata:
{{- if .svc.annotations }}
  annotations:
    {{- toYaml .svc.annotations | nindent 4 }}
{{- end }}
  labels:
    {{- include "haproxy-ingress.labels" .root | nindent 4 }}
{{- if .svc.labels }}
    {{- toYaml .svc.labels | nindent 4 }}
{{- end }}
  name: {{ .name }}
  namespace: {{ .root.Release.Namespace }}
spec:
{{- if .svc.clusterIP }}
  clusterIP: "{{ .svc.clusterIP }}"
{{- end }}
{{- if .svc.clusterIPs }}
  clusterIPs:
    {{- toYaml .svc.clusterIPs | nindent 4 }}
{{- end }}
{{- if $externalTrafficPolicy }}
{{- if or (eq $svctype "NodePort") (eq $svctype "LoadBalancer") }}
  externalTrafficPolicy: "{{ $externalTrafficPolicy }}"
{{- end }}
{{- end }}
{{- if .svc.externalIPs }}
  externalIPs:
    {{- toYaml .svc.externalIPs | nindent 4 }}
{{- end }}
{{- if .svc.ipFamilies }}
  ipFamilies:
    {{- toYaml .svc.ipFamilies | nindent 4 }}
{{- end }}
{{- if .svc.ipFamilyPolicy }}
  ipFamilyPolicy: {{ .svc.ipFamilyPolicy | quote }}
{{- end }}
{{- if .svc.loadBalancerClass }}
  loadBalancerClass: "{{ .svc.loadBalancerClass }}"
{{- end }}
{{- if .svc.loadBalancerIP }}
  loadBalancerIP: "{{ .svc.loadBalancerIP }}"
{{- end }}
{{- if .svc.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
    {{- toYaml .svc.loadBalancerSourceRanges | nindent 4 }}
{{- end }}
{{- if (.svc.healthCheckNodePort) }}
  healthCheckNodePort: {{ .svc.healthCheckNodePort }}
{{- end }}
  ports:
{{- if .root.Values.controller.enableStaticPorts }}
  {{- range $httpPorts }}
    - name: "http-{{ .port }}"
      port: {{ .port }}
      protocol: TCP
      targetPort: {{ .targetPort | default "http" }}
    {{- if (not (empty .nodePort)) }}
      nodePort: {{ .nodePort }}
    {{- end }}
  {{- end }}
  {{- range $httpsPorts }}
    - name: "https-{{ .port }}"
      port: {{ .port }}
      protocol: TCP
      targetPort: {{ .targetPort | default "https" }}
    {{- if (not (empty .nodePort)) }}
      nodePort: {{ .nodePort }}
    {{- end }}
  {{- end }}
{{- end }}
{{- range $key, $value := .root.Values.controller.tcp }}
    - name: "{{ tpl $key $ }}-tcp"
      port: {{ tpl $key $ }}
      protocol: TCP
      targetPort: "{{ tpl $key $ }}-tcp"
{{- end }}
{{- range $row := .svc.extraPorts }}
    - name: "extra-port-{{ $row.port }}"
      port: {{ $row.port }}
      protocol: TCP
      targetPort: {{ $row.targetPort }}
    {{- if (not (empty $row.nodePort)) }}
      nodePort: {{ $row.nodePort }}
    {{- end }}
{{- end }}
  selector:
    {{- include "haproxy-ingress.selectorLabels" .root | nindent 4 }}
  type: "{{ $svctype }}"
{{- end }}
